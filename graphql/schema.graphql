type User {
  id: ID
  email: String!
  name: String
  phone: Int
  address: String
  birthday: String
  gender: Gender
  role: Role!
  password: String!
  createdBy: User
  createdAt: String
  updatedAt: String
}

enum Role {
  ADMIN
  EMPLOYEE
}

enum Gender {
  MALE
  FEMALE
}

### Staff manage
type Query {
  """
  Хэрэглэгчийн жагсаалтаас имэйлээр хайх
  """
  searchUserByEmail(email: String!): [User!]!

  """
  Хэрэглэгчийн жагсаалтаас роллоор филтердэж авах
  """
  users(role: [Role!]): [User!]!

  """
  Хэрэглэгчийн мэдээлэл авах
  """
  user(id: ID!): User
}

type AuthPayload {
  token: String!
  user: User!
}

type Mutation {
  signupUser(input: AuthUserInput!): AuthPayload
  login(input: AuthUserInput!): AuthPayload
  createUser(input: CreateUserInput!): User
  updateUser(input: UpdateUserInput!): User
  deleteUser(id: String!): User
}

input AuthUserInput {
  email: String!
  password: String!
}

input CreateUserInput {
  email: String!
  password: String!
  role: Role
  name: String
  phone: String
  address: String
  birthday: String
  gender: Gender
  createdById: String
  createdAt: String
}

input UpdateUserInput {
  id: ID!
  name: String
  phone: String
  address: String
  birthday: String
  gender: Gender
}
